t = int(input())
for _ in range(t):
    n = int(input())

    arr = []

    for _ in range(2):
        arr.append(list(map(int,input().split())))

    if n == 1:
        print(max(arr[0][0],arr[1][0]))
        continue

    for j in range(1,n):
        if j==1:
            arr[0][1] += arr[1][0]
            arr[1][1] += arr[0][0]

        else:
            arr[0][j] += max(arr[1][j-1] , arr[1][j-2])
            arr[1][j] += max(arr[0][j-1] , arr[0][j-2])
    print(max(arr[0][n-1],arr[1][n-1]))

# 스티커의 위 아래 양 옆을 뜯을 수 없다면 대각선으로 값을 누적으로 더하며 max값을 비교하는 식으로 접근합니다.
# 칸을 건너뛸 때도 있어 옆의 한 칸 까지 추가로 고려합니다.

# 스티커 만들기 코드 진행
# 1. t,n값을 받은 뒤, 2차원 리스트를 생성할 때 인풋 값을 받아 공백을 기준으로 잘라 리스트로 만듭니다.
# 2. 아직 sting 자료형인 해당 리스트를 map함수를 통해 int값으로 변환해 arr리스트에 다시 넣어줍니다.
# 3. 이제 스티커(2차원 리스트)가 완성되었습니다.

# 스티커 떼기 코드 진행
# 첫번쨰 두번째 열 : 어떤 스티커를 먼저 떼든 두번째 열을 기준으로 대각선으로 누적합산이 진행된다. 그러므로 대각선으로 각자의 값을 더해주고,
# 두번째 열부터 대각선으로 max값 비교를 진행합니다.
# 반복한 결과 마지막 열의 두 행에 각각의 최선을 다한 합산 값이 들어있을 것입니다. 두 행을 비교해 max값을 출력하면 정답이 나옵니다.